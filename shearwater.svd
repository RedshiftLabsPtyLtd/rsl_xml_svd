<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="svd_stylesheet.xsl"?>



<!--
  Modified by Redshift Labs Pty Ltd

  Copyright (C) 2012-2014 ARM Limited. All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   - Neither the name of ARM nor the names of its contributors may be used
     to endorse or promote products derived from this software without
     specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
 -->

<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd" >
  <vendor>RedShift Labs</vendor>                                  <!-- device vendor name -->
  <vendorID>RedshiftLabs</vendorID>                               <!-- device vendor short name -->
  <name>shearwater</name>                                         <!-- name of part-->
  <series>IMU</series>                                            <!-- device series the device belongs to -->
  <version>0.3</version>                                          <!-- version of this description, adding CMSIS-SVD 1.1 tags -->
  <description>Shearwater Board Peripheral Description</description>
  <licenseText>                                                   <!-- this license text will appear in header file. \n force line breaks -->
    Redshift Labs Pty Ltd modified this file\n

    ARM Limited (ARM) is supplying this software for use with Cortex-M\n
    processor based microcontroller, but can be equally used for other\n
    suitable  processor architectures. This file can be freely distributed.\n
    Modifications to this file shall be clearly marked.\n
    \n
    THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED\n
    OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\n
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.\n
    ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR\n
    CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  </licenseText>
  <addressUnitBits>32</addressUnitBits>                           <!-- byte addressable memory -->
  <width>32</width>                                               <!-- bus width is 32 bits -->

  <!-- default settings implicitly inherited by subsequent sections -->
  <size>32</size>                                                 <!-- this is the default size (number of bits) of all peripherals
                                                                       and register that do not define "size" themselves -->
  <access>read-write</access>                                     <!-- default access permission for all subsequent registers -->
  <resetValue>0x00000000</resetValue>                             <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFF</resetMask>                               <!-- by default all 32Bits of the registers are used -->

  <peripherals>
    <!-- Fusion Configuration Registers -->
    <peripheral>
      <name>RSL</name>
      <version>0.2</version>
      <description>Fusion Configuration Registers for the shearwater board</description>
      <baseAddress>0x00000000</baseAddress>
      <size>32</size>
      <access>read-write</access>

      <addressBlock>
        <offset>0</offset>
        <size>0x500</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>

      <!-- CREG_COM_SETTINGS: General communication settings -->
        <register>
          <name>CREG_COM_SETTINGS</name>
          <description>The CREG_COM_SETTINGS register is used to set the boards serial port baud rate and to enable (disable) the automatic transmission of sensor data and estimated states (telemetry).</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- BAUD_RATE: Baud rate -->
            <field>
              <name>BAUD_RATE</name>
              <description>Sets the baud rate of the boards main serial port:</description>
              <bitRange>[31:28]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>9600</name>
                  <description>Baud rate: 9600</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>14400</name>
                  <description>Baud rate: 14400</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>19200</name>
                  <description>Baud rate: 19200</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>38400</name>
                  <description>Baud rate: 38400</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>57600</name>
                  <description>Baud rate: 57600</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>115200</name>
                  <description>Baud rate: 115200</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128000</name>
                  <description>Baud rate: 128000</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>153600</name>
                  <description>Baud rate: 153600</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>230400</name>
                  <description>Baud rate: 230400</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>256000</name>
                  <description>Baud rate: 256000</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>460800</name>
                  <description>Baud rate: 460800</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>921600</name>
                  <description>Baud rate: 921600</description>
                  <value>11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CREG_COM_RATES1: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES1</name>
          <description>The CREG_COM_RATES1 register sets desired telemetry transmission rates in Hz for raw accelerometer 1, gyro 1, gyro 2 and magnetometer 1 data. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- RAW_ACCEL_1_RATE: raw accelerometer 1 data broadcast rate -->
            <field>
              <name>RAW_ACCEL_1_RATE</name>
              <description>Specifies the desired raw accelerometer 1 data broadcast rate in Hz. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- RAW_GYRO_1_RATE: raw gyro 1 data broadcast rate -->
            <field>
              <name>RAW_GYRO_1_RATE</name>
              <description>Specifies the desired raw gyro 1 data broadcast rate in Hz. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz</description>
              <bitRange>[23:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- RAW_GYRO_2_RATE: raw gyro 2 data broadcast rate -->
            <field>
              <name>RAW_GYRO_2_RATE</name>
              <description>Specifies the desired raw gyro 2 data broadcast rate in Hz. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[15:8]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- RAW_MAG_1_RATE: raw magnetometer 1 data broadcast rate -->
            <field>
              <name>RAW_MAG_1_RATE</name>
              <description>Specifies the desired raw magnetometer 1 data broadcast rate in Hz. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_COM_RATES2: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES2</name>
          <description>The CREG_COM_RATES2 register sets desired telemetry transmission rates for the magnetometer 2, all raw data, and temperature data rate. The ALL_RAW_RATE setting has higher priority over the individual raw sensor data settings, i.e. whenever this bitfield is set, then the individual raw sensor settings are ignored and not used. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- TEMP_RATE: broadcast rate for temperature data -->
            <field>
              <name>TEMP_RATE</name>
              <description>Specifies the desired broadcast rate for temperature data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- RAW_MAG_2_RATE: raw magnetometer 2 data broadcast rate -->
            <field>
              <name>RAW_MAG_2_RATE</name>
              <description>Specifies the desired raw magnetometer 2 data broadcast rate in Hz. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[23:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- ALL_RAW_RATE: broadcast rate for all raw sensor data -->
            <field>
              <name>ALL_RAW_RATE</name>
              <description>Specifies the desired broadcast rate for all raw sensor data. If set, this overrides the broadcast rate setting for individual raw data broadcast rates. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>


        <!-- CREG_COM_RATES3: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES3</name>
          <description>The CREG_COM_RATES3 register sets desired telemetry transmission rates for processed sensor data for the sensors: the accelerometer 1, gyro 1, gyro 2, and magnetometer 1. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PROC_ACCEL_1_RATE: broadcast rate for processed accelerometer 1 data -->
            <field>
              <name>PROC_ACCEL_1_RATE</name>
              <description>Specifies the desired broadcast rate for processed accelerometer 1 data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- PROC_GYRO_1_RATE: broadcast rate for processed rate gyro 1 data -->
            <field>
              <name>PROC_GYRO_1_RATE</name>
              <description>Specifies the desired broadcast rate for processed rate gyro 1 data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[23:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- PROC_GYRO_2_RATE: broadcast rate for processed rate gyro 2 data -->
            <field>
              <name>PROC_GYRO_2_RATE</name>
              <description>Specifies the desired broadcast rate for processed processed rate gyro 2 data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[15:8]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- PROC_MAG_1_RATE: broadcast rate for processed magnetometer 1 data -->
            <field>
              <name>PROC_MAG_1_RATE</name>
              <description>Specifies the desired broadcast rate for processed magnetometer 1 data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>


        <!-- CREG_COM_RATES4: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES4</name>
          <description>The CREG_COM_RATES4 register defines the desired telemetry transmission rates for the processed data for the magnetometer 2, and for all processed data. The ALL_PROC_RATE setting has higher priority over the individual processed sensor data settings, i.e. whenever this bitfield is set, then the individual processed sensor transmission rate settings are ignored and not used. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PROC_MAG_2_RATE: broadcast rate for processed magnetometer 2 data -->
            <field>
              <name>PROC_MAG_2_RATE</name>
              <description>Specifies the desired broadcast rate for processed magnetometer 2 data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- ALL_PROC_RATE: broadcast rate for raw all processed sensor data -->
            <field>
              <name>ALL_PROC_RATE</name>
              <description>Specifies the desired broadcast rate for raw all processed sensor data. If set, this overrides the broadcast rate setting for individual processed data broadcast rates. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>


        <!-- CREG_COM_RATES5: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES5</name>
          <description>The CREG_COM_RATES5 register sets desired telemetry transmission rates for quaternions, Euler Angles, position, and velocity estimates. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>

            <!-- QUAT_RATE -->
            <field>
              <name>QUAT_RATE</name>
              <description>Specifies the desired broadcast rate for quaternion data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- EULER_RATE -->
            <field>
              <name>EULER_RATE</name>
              <description>Specifies the desired broadcast rate for Euler Angle data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[23:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- POSITION_RATE -->
            <field>
              <name>POSITION_RATE</name>
              <description>Specifies the desired broadcast rate position. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[15:8]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- VELOCITY_RATE -->
            <field>
              <name>VELOCITY_RATE</name>
              <description>Specifies the desired broadcast rate for velocity. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_COM_RATES6: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES6</name>
          <description>The CREG_COM_RATES6 register sets desired telemetry transmission rates for pose (Euler/position packet), health, and gyro bias estimates for the gyro 1 and gyro 2. If the specified rate is 0, then no data is transmitted.</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- POSE_RATE -->
            <field>
              <name>POSE_RATE</name>
              <description>Specifies the desired broadcast rate for pose (Euler Angle and position) data. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[31:24]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- HEALTH_RATE -->
            <field>
              <name>HEALTH_RATE</name>
              <description>Specifies the desired broadcast rate for the sensor health packet.</description>
              <bitRange>[19:16]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0_125</name>
                  <description>Packet frequency: 0.125 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0_25</name>
                  <description>Packet frequency: 0.25 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0_5</name>
                  <description>Packet frequency: 0.5 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>6</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GYRO_BIAS_1_RATE -->
            <field>
              <name>GYRO_BIAS_1_RATE</name>
              <description>Specifies the desired broadcast rate for gyro 1 bias estimates. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[15:8]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>

            <!-- GYRO_BIAS_2_RATE -->
            <field>
              <name>GYRO_BIAS_2_RATE</name>
              <description>Specifies the desired broadcast rate for gyro 2 bias estimates. The data is stored as an unsigned 8-bit integer, yielding a maximum rate of 255 Hz.</description>
              <bitRange>[7:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_COM_RATES7: Broadcast rate settings -->
        <register>
          <name>CREG_COM_RATES7</name>
          <description>The CREG_COM_RATES7 register sets desired telemetry transmission rates in Hz for NMEA packets.</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- HEALTH_RATE -->
            <field>
              <name>HEALTH_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style health packet.</description>
              <bitRange>[31:28]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- POSE_RATE -->
            <field>
              <name>POSE_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style pose (Euler Angle/position) packet.</description>
              <bitRange>[27:24]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ATTITUDE_RATE -->
            <field>
              <name>ATTITUDE_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style attitude packet.</description>
              <bitRange>[23:20]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SENSOR_RATE -->
            <field>
              <name>SENSOR_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style sensor data packet.</description>
              <bitRange>[19:16]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RATES_RATE -->
            <field>
              <name>RATES_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style rate data packet.</description>
              <bitRange>[15:12]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPS_POSE_RATE -->
            <field>
              <name>GPS_POSE_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style GPS pose packet.</description>
              <bitRange>[11:8]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- QUAT_RATE -->
            <field>
              <name>QUAT_RATE</name>
              <description>Specifies the desired broadcast rate for Redshift Labs NMEA-style quaternion packet.</description>
              <bitRange>[7:4]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Packet frequency: OFF</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Packet frequency: 1 Hz</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Packet frequency: 2 Hz</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Packet frequency: 4 Hz</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Packet frequency: 5 Hz</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>Packet frequency: 10 Hz</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>Packet frequency: 15 Hz</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>Packet frequency: 20 Hz</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Packet frequency: 30 Hz</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>40</name>
                  <description>Packet frequency: 40 Hz</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>50</name>
                  <description>Packet frequency: 50 Hz</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>60</name>
                  <description>Packet frequency: 60 Hz</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>70</name>
                  <description>Packet frequency: 70 Hz</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>80</name>
                  <description>Packet frequency: 80 Hz</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>90</name>
                  <description>Packet frequency: 90 Hz</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>100</name>
                  <description>Packet frequency: 100 Hz</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

          </fields>
        </register>

        <!-- CREG_MISC_SETTINGS: Misc. settings -->
        <register>
          <name>CREG_MISC_SETTINGS</name>
          <description>This register contains miscellaneous filter and sensor control options.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PPS -->
            <field>
              <name>PPS</name>
              <description>If set, this bit causes the TX2 pin on the IO Expansion header to be used as the PPS input from an external GPS module. PPS pulses will then be used to synchronize the system clock to UTC time of day.</description>
              <bitRange>[8:8]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
            </field>

            <!-- ZG -->
            <field>
              <name>ZG</name>
              <description>If set, this bit causes the devicee to attempt to measure the rate gyro bias on startup. The sensor must be stationary on startup for this feature to work properly.</description>
              <bitRange>[3:3]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
            </field>

            <!-- Q -->
            <field>
              <name>Q</name>
              <description>If this bit is set, the sensor will run in quaternion mode instead of Euler Angle mode.</description>
              <bitRange>[2:2]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
            </field>

            <!-- MAG1 -->
            <field>
              <name>MAG1</name>
              <description>If set, the magnetometer 1 will be used in state updates.</description>
              <bitRange>[1:1]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
            </field>

            <!-- MAG2 -->
            <field>
              <name>MAG2</name>
              <description>If set, the magnetometer 2 will be used in state updates.</description>
              <bitRange>[0:0]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_1_MEAS_RANGE: Gyro 1 measurement range settings -->
        <register>
          <name>CREG_GYRO_1_MEAS_RANGE</name>
          <description>The CREG_GYRO_1_MEAS_RANGE register sets the desired measurement range for the gyro 1 sensor. If the rate is not set, then the default value of 2000 deg/s will be used as a measurement range.</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MEAS_GYRO1 -->
            <field>
              <name>MEAS_GYRO1</name>
              <description>Specifies the desired measurement range for the gyro 1 measurements.</description>
              <bitRange>[1:0]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>2000</name>
                  <description>Measurement range: +- 2000 dps</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1000</name>
                  <description>Measurement range: +- 1000 dps</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>500</name>
                  <description>Measurement range: +- 500 dps</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>250</name>
                  <description>Measurement range: +- 250 dps</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_1_TRIM_X -->
        <register>
          <name>CREG_GYRO_1_TRIM_X</name>
          <description>This register sets the x-axis rate gyro 1 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_TRIM_X: Bias trim for x-axis rate gyro 1 -->
            <field>
              <name>GYRO_1_TRIM_X</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_1_TRIM_Y: Bias trim for y-axis rate gyro 1 -->
        <register>
          <name>CREG_GYRO_1_TRIM_Y</name>
          <description>This register sets the y-axis rate gyro 1 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_TRIM_Y -->
            <field>
              <name>GYRO_1_TRIM_Y</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_1_TRIM_Z: Bias trim for z-axis rate gyro 1 -->
        <register>
          <name>CREG_GYRO_1_TRIM_Z</name>
          <description>This register sets the z-axis rate gyro 1 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_TRIM_Z -->
            <field>
              <name>GYRO_1_TRIM_Z</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>


        <!-- CREG_GYRO_2_MEAS_RANGE: Gyro 2 measurement range settings -->
        <register>
          <name>CREG_GYRO_2_MEAS_RANGE</name>
          <description>The CREG_GYRO_2_MEAS_RANGE register sets the desired measurement range for the gyro 2 sensor. If the rate is not set, then the default value of 2000 deg/s will be used as a measurement range.</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MEAS_GYRO2 -->
            <field>
              <name>MEAS_GYRO2</name>
              <description>Specifies the desired measurement range for the gyro 2 measurements.</description>
              <bitRange>[1:0]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>2000</name>
                  <description>Measurement range: +- 2000 dps</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1000</name>
                  <description>Measurement range: +- 1000 dps</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>500</name>
                  <description>Measurement range: +- 500 dps</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>250</name>
                  <description>Measurement range: +- 250 dps</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>


        <!-- CREG_GYRO_2_TRIM_X -->
        <register>
          <name>CREG_GYRO_2_TRIM_X</name>
          <description>This register sets the x-axis rate gyro 2 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_TRIM_X: Bias trim for x-axis rate gyro 2 -->
            <field>
              <name>GYRO_2_TRIM_X</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_2_TRIM_Y: Bias trim for y-axis rate gyro 2 -->
        <register>
          <name>CREG_GYRO_2_TRIM_Y</name>
          <description>This register sets the y-axis rate gyro 2 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_TRIM_Y -->
            <field>
              <name>GYRO_2_TRIM_Y</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_GYRO_2_TRIM_Z: Bias trim for z-axis rate gyro 2 -->
        <register>
          <name>CREG_GYRO_2_TRIM_Z</name>
          <description>This register sets the z-axis rate gyro 2 trim, which is used to add additional bias compensation for the rate gyros during calls to the ZERO_GYRO_BIAS command.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_TRIM_Z -->
            <field>
              <name>GYRO_2_TRIM_Z</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL1_1: Row 1, Column 1 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL1_1</name>
          <description>Row 1, Column 1 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL1_1 -->
            <field>
              <name>MAG_1_CAL1_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL1_2: Row 1, Column 1 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL1_2</name>
          <description>Row 1, Column 2 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL1_2 -->
            <field>
              <name>MAG_1_CAL1_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL1_3: Row 1, Column 3 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL1_3</name>
          <description>Row 1, Column 3 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL1_3 -->
            <field>
              <name>MAG_1_CAL1_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL2_1: Row 2, Column 1 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL2_1</name>
          <description>Row 2, Column 1 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL2_1 -->
            <field>
              <name>MAG_1_CAL2_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL2_2: Row 2, Column 2 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL2_2</name>
          <description>Row 2, Column 2 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL2_2 -->
            <field>
              <name>MAG_1_CAL2_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL2_3: Row 2, Column 3 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL2_3</name>
          <description>Row 2, Column 3 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL2_3 -->
            <field>
              <name>MAG_1_CAL2_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL3_1: Row 3, Column 1 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL3_1</name>
          <description>Row 3, Column 1 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL3_1 -->
            <field>
              <name>MAG_1_CAL3_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL3_2: Row 3, Column 2 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL3_2</name>
          <description>Row 3, Column 2 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL3_2 -->
            <field>
              <name>MAG_1_CAL3_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_CAL3_3: Row 3, Column 3 of magnetometer 1 calibration matrix -->
        <register>
          <name>CREG_MAG_1_CAL3_3</name>
          <description>Row 3, Column 3 of magnetometer 1 calibration matrix.</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_CAL3_3 -->
            <field>
              <name>MAG_1_CAL3_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_BIAS_X -->
        <register>
          <name>CREG_MAG_1_BIAS_X</name>
          <description>This register stores a bias term for the magnetometer 1 x-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_BIAS_X -->
            <field>
              <name>MAG_1_BIAS_X</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_BIAS_Y -->
        <register>
          <name>CREG_MAG_1_BIAS_Y</name>
          <description>This register stores a bias term for the magnetometer 1 y-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_BIAS_Y -->
            <field>
              <name>MAG_1_BIAS_Y</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_1_BIAS_Z -->
        <register>
          <name>CREG_MAG_1_BIAS_Z</name>
          <description>This register stores a bias term for the magnetometer 1 z-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_BIAS_Z -->
            <field>
              <name>MAG_1_BIAS_Z</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>


        <!-- CREG_MAG_2_CAL1_1: Row 1, Column 1 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL1_1</name>
          <description>Row 1, Column 1 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL1_1 -->
            <field>
              <name>MAG_2_CAL1_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL1_2: Row 1, Column 2 of magnetometer 2 calibration matrix  -->
        <register>
          <name>CREG_MAG_2_CAL1_2</name>
          <description>Row 1, Column 2 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL1_2 -->
            <field>
              <name>MAG_2_CAL1_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL1_3: Row 1, Column 3 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL1_3</name>
          <description>Row 1, Column 3 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL1_3 -->
            <field>
              <name>MAG_2_CAL1_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL2_1: Row 2, Column 1 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL2_1</name>
          <description>Row 2, Column 1 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL2_1 -->
            <field>
              <name>MAG_2_CAL2_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL2_2: Row 2, Column 2 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL2_2</name>
          <description>Row 2, Column 2 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL2_2 -->
            <field>
              <name>MAG_2_CAL2_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL2_3: Row 2, Column 3 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL2_3</name>
          <description>Row 2, Column 3 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL2_3 -->
            <field>
              <name>MAG_2_CAL2_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL3_1: Row 3, Column 1 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL3_1</name>
          <description>Row 3, Column 1 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL3_1 -->
            <field>
              <name>MAG_2_CAL3_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL3_2: Row 3, Column 2 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL3_2</name>
          <description>Row 3, Column 2 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL3_2 -->
            <field>
              <name>MAG_2_CAL3_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_CAL3_3: Row 3, Column 3 of magnetometer 2 calibration matrix -->
        <register>
          <name>CREG_MAG_2_CAL3_3</name>
          <description>Row 3, Column 3 of magnetometer 2 calibration matrix.</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_CAL3_3 -->
            <field>
              <name>MAG_2_CAL3_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_BIAS_X -->
        <register>
          <name>CREG_MAG_2_BIAS_X</name>
          <description>This register stores a bias term for the magnetometer 2 x-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_BIAS_X -->
            <field>
              <name>MAG_2_BIAS_X</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_BIAS_Y -->
        <register>
          <name>CREG_MAG_2_BIAS_Y</name>
          <description>This register stores a bias term for the magnetometer 2 y-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_BIAS_Y -->
            <field>
              <name>MAG_2_BIAS_Y</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_MAG_2_BIAS_Z -->
        <register>
          <name>CREG_MAG_2_BIAS_Z</name>
          <description>This register stores a bias term for the magnetometer 2 z-axis for hard-iron calibration. This term can be computed by performing magnetometer calibration with the Redshift labs Serial Interface.</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_BIAS_Z -->
            <field>
              <name>MAG_2_BIAS_Z</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_MEAS_RANGE: Accelerometer 1 measurement range settings -->
        <register>
          <name>CREG_ACCEL_1_MEAS_RANGE</name>
          <description>The CREG_ACCEL_1_MEAS_RANGE register sets the desired measurement range for the accelerometer 1. If the rate is not set, then the default value of the +-2 g will be used as a measurement range.</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MEAS_ACC1 -->
            <field>
              <name>MEAS_ACC1</name>
              <description>Specifies the desired measurement range for the accelerometer 1 measurements.</description>
              <bitRange>[1:0]</bitRange>
              <dataType>bitField</dataType>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>2</name>
                  <description>Measurement range: +- 2 g</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Measurement range: +- 4 g</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Measurement range: +- 8 g</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Measurement range: +- 16 g</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>


        <!-- CREG_ACCEL_1_CAL1_1: Row 1, Column 1 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL1_1</name>
          <description>Row 1, Column 1 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL1_1 -->
            <field>
              <name>ACCEL_1_CAL1_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL1_2: Row 1, Column 2 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL1_2</name>
          <description>Row 1, Column 2 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL1_2 -->
            <field>
              <name>ACCEL_1_CAL1_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL1_3: Row 1, Column 3 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL1_3</name>
          <description>Row 1, Column 3 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL1_3 -->
            <field>
              <name>ACCEL_1_CAL1_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL2_1: Row 2, Column 1 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL2_1</name>
          <description>Row 2, Column 1 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL2_1 -->
            <field>
              <name>ACCEL_1_CAL2_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL2_2: Row 2, Column 2 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL2_2</name>
          <description>Row 2, Column 2 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL2_2 -->
            <field>
              <name>ACCEL_1_CAL2_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL2_3: Row 2, Column 3 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL2_3</name>
          <description>Row 2, Column 3 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL2_3 -->
            <field>
              <name>ACCEL_1_CAL2_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL3_1: Row 3, Column 1 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL3_1</name>
          <description>Row 3, Column 1 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL3_1 -->
            <field>
              <name>ACCEL_1_CAL3_1</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL3_2: Row 3, Column 2 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL3_2</name>
          <description>Row 3, Column 2 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL3_2 -->
            <field>
              <name>ACCEL_1_CAL3_2</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_CAL3_3: Row 3, Column 3 of accelerometer 1 calibration matrix -->
        <register>
          <name>CREG_ACCEL_1_CAL3_3</name>
          <description>Row 3, Column 3 of accelerometer 1 calibration matrix.</description>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_CAL3_3 -->
            <field>
              <name>ACCEL_1_CAL3_3</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_BIAS_X -->
        <register>
          <name>CREG_ACCEL_1_BIAS_X</name>
          <description>This register stores a bias term for the accelerometer 1 x-axis for bias calibration. This term can be computed by performing calibrate accelerometers command within the Redshift labs Serial Interface.</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_BIAS_X -->
            <field>
              <name>ACCEL_1_BIAS_X</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_BIAS_Y -->
        <register>
          <name>CREG_ACCEL_1_BIAS_Y</name>
          <description>This register stores a bias term for the accelerometer 1 y-axis for bias calibration. This term can be computed by performing calibrate accelerometers command within the Redshift labs Serial Interface.</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_BIAS_Y -->
            <field>
              <name>ACCEL_1_BIAS_Y</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CREG_ACCEL_1_BIAS_Z -->
        <register>
          <name>CREG_ACCEL_1_BIAS_Z</name>
          <description>This register stores a bias term for the accelerometer 1 z-axis for bias calibration. This term can be computed by performing calibrate accelerometers command within the Redshift labs Serial Interface.</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_BIAS_Z -->
            <field>
              <name>ACCEL_1_BIAS_Z</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-write</access>
            </field>
          </fields>
        </register>

      <!-- Fusion data registers V2 -->

        <!-- DREG_HEALTH -->
        <register>
          <name>DREG_HEALTH</name>
          <description>The health register reports the current status of the sensors on the board. Monitoring the health register is the easiest way to watch for other problems that could affect the behavior of the board, status of the sensors. The analogous to the health register, the status of the GPS signal can be monitored in the DREG_GPS_HEALTH</description>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- OVF -->
            <field>
              <name>OVF</name>
              <description>Overflow bit. This bit is set if the board is attempting to transmit data over the serial port faster than is allowed given the baud-rate. If this bit is set, reduce broadcast rates in the COM_RATES registers.</description>
              <bitRange>[8:8]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- ACC1_N -->
            <field>
              <name>ACC1_N</name>
              <description>This bit is set if the sensor detects that the norm of the accelerometer measurement is too far away from 1G to be used (i.e. during aggressive acceleration or high vibration).</description>
              <bitRange>[7:7]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- MAG1_N -->
            <field>
              <name>MAG1_N</name>
              <description>This bit is set if the sensor detects that the norm of the magnetometer measurement for the magnetometer 1 is too far away from 1.0 to be trusted. Usually indicates bad calibration, local field distortions, or both.</description>
              <bitRange>[6:6]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- MAG2_N -->
            <field>
              <name>MAG2_N</name>
              <description>This bit is set if the sensor detects that the norm of the magnetometer measurement for the magnetometer 2 is too far away from 1.0 to be trusted. Usually indicates bad calibration, local field distortions, or both.</description>
              <bitRange>[5:5]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- ACCEL1 -->
            <field>
              <name>ACCEL1</name>
              <description>This bit will be set if the accelerometer 1 fails to initialize on startup.</description>
              <bitRange>[4:4]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- GYRO1 -->
            <field>
              <name>GYRO1</name>
              <description>This bit will be set if the rate gyro 1 fails to initialize on startup.</description>
              <bitRange>[3:3]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- GYRO2 -->
            <field>
              <name>GYRO2</name>
              <description>This bit will be set if the rate gyro 2 fails to initialize on startup.</description>
              <bitRange>[2:2]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- MAG1 -->
            <field>
              <name>MAG1</name>
              <description>This bit will be set if the magnetometer 1 fails to initialize on startup.</description>
              <bitRange>[1:1]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

            <!-- MAG2 -->
            <field>
              <name>MAG2</name>
              <description>This bit will be set if the magnetometer 2 fails to initialize on startup.</description>
              <bitRange>[0:0]</bitRange>
              <dataType>bitField</dataType>
              <access>read-only</access>
            </field>

          </fields>
        </register>

        <!-- DREG_GYRO_1_RAW_XY -->
        <register>
          <name>DREG_GYRO_1_RAW_XY</name>
          <description>Contains raw X and Y axis rate gyro 1 data.</description>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_RAW_X -->
            <field>
              <name>GYRO_1_RAW_X</name>
              <description>Gyro X (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- GYRO_1_RAW_Y -->
            <field>
              <name>GYRO_1_RAW_Y</name>
              <description>Gyro Y (2s complement 16-bit integer)</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_RAW_Z -->
        <register>
          <name>DREG_GYRO_1_RAW_Z</name>
          <description>Contains raw Z axis rate gyro 1 data.</description>
          <addressOffset>0x15C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_RAW_Z -->
            <field>
              <name>GYRO_1_RAW_Z</name>
              <description>Gyro Z (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_RAW_TIME -->
        <register>
          <name>DREG_GYRO_1_RAW_TIME</name>
          <description>Contains time at which the last rate gyro 1 data was acquired.</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_RAW_TIME -->
            <field>
              <name>GYRO_1_RAW_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_RAW_XY -->
        <register>
          <name>DREG_GYRO_2_RAW_XY</name>
          <description>Contains raw X and Y axis rate gyro 2 data.</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_RAW_X -->
            <field>
              <name>GYRO_2_RAW_X</name>
              <description>Gyro X (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- GYRO_2_RAW_Y -->
            <field>
              <name>GYRO_2_RAW_Y</name>
              <description>Gyro Y (2s complement 16-bit integer)</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_RAW_Z -->
        <register>
          <name>DREG_GYRO_2_RAW_Z</name>
          <description>Contains raw Z axis rate gyro 2 data.</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_RAW_Z -->
            <field>
              <name>GYRO_2_RAW_Z</name>
              <description>Gyro Z (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_RAW_TIME -->
        <register>
          <name>DREG_GYRO_2_RAW_TIME</name>
          <description>Contains time at which the last rate gyro 2 data was acquired.</description>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_RAW_TIME -->
            <field>
              <name>GYRO_2_RAW_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_RAW_XY -->
        <register>
          <name>DREG_ACCEL_1_RAW_XY</name>
          <description>Contains raw X and Y axis accelerometer 1 data.</description>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_RAW_X -->
            <field>
              <name>ACCEL_1_RAW_X</name>
              <description>Accel X (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- ACCEL_1_RAW_Y -->
            <field>
              <name>ACCEL_1_RAW_Y</name>
              <description>Accel Y (2s complement 16-bit integer)</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_RAW_Z -->
        <register>
          <name>DREG_ACCEL_1_RAW_Z</name>
          <description>Contains raw Z axis accelerometer 1 data.</description>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_RAW_Z -->
            <field>
              <name>ACCEL_1_RAW_Z</name>
              <description>Accel Z (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_RAW_TIME -->
        <register>
          <name>DREG_ACCEL_1_RAW_TIME</name>
          <description>Contains time at which the last raw data sample for the accelerometer 1 was acquired.</description>
          <addressOffset>0x178</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_RAW_TIME -->
            <field>
              <name>ACCEL_1_RAW_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_RAW_X -->
        <register>
          <name>DREG_MAG_1_RAW_X</name>
          <description>Contains raw x axis magnetometer 1 data.</description>
          <addressOffset>0x17C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_RAW_X -->
            <field>
              <name>MAG_1_RAW_X</name>
              <description>32-bit signed integer value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>int32_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_RAW_Y -->
        <register>
          <name>DREG_MAG_1_RAW_Y</name>
          <description>Contains raw y axis magnetometer 1 data.</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_RAW_Y -->
            <field>
              <name>MAG_1_RAW_Y</name>
              <description>32-bit signed integer value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>int32_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_RAW_Z -->
        <register>
          <name>DREG_MAG_1_RAW_Z</name>
          <description>Contains raw z axis magnetometer 1 data.</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_RAW_Z -->
            <field>
              <name>MAG_1_RAW_Z</name>
              <description>32-bit signed integer value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>int32_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_RAW_TIME -->
        <register>
          <name>DREG_MAG_1_RAW_TIME</name>
          <description>Contains time at which the last magnetometer data from the magnetometer 1 was acquired.</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_RAW_TIME -->
            <field>
              <name>MAG_1_RAW_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>


        <!-- DREG_MAG_2_RAW_XY -->
        <register>
          <name>DREG_MAG_2_RAW_XY</name>
          <description>Contains raw X and Y axis magnetometer 2 data.</description>
          <addressOffset>0x18C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_RAW_X -->
            <field>
              <name>MAG_2_RAW_X</name>
              <description>Magnetometer X (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- MAG_2_RAW_Y -->
            <field>
              <name>MAG_2_RAW_Y</name>
              <description>Magnetometer Y (2s complement 16-bit integer)</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_RAW_Z -->
        <register>
          <name>DREG_MAG_2_RAW_Z</name>
          <description>Contains raw Z axis magnetometer 2 data.</description>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_RAW_Z -->
            <field>
              <name>MAG_2_RAW_Z</name>
              <description>Magnetometer Z (2s complement 16-bit integer)</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_RAW_TIME -->
        <register>
          <name>DREG_MAG_2_RAW_TIME</name>
          <description>Contains time at which the last magnetometer data from the magnetometer 2 was acquired.</description>
          <addressOffset>0x194</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_RAW_TIME -->
            <field>
              <name>MAG_2_RAW_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_TEMPERATURE -->
        <register>
          <name>DREG_TEMPERATURE</name>
          <description>Contains the temperature output of the onboard temperature sensor.</description>
          <addressOffset>0x198</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- TEMPERATURE -->
            <field>
              <name>TEMPERATURE</name>
              <description>Temperature in degrees Celcius (32-bit IEEE Floating Point)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_TEMPERATURE_TIME -->
        <register>
          <name>DREG_TEMPERATURE_TIME</name>
          <description>Contains time at which the last temperature was acquired.</description>
          <addressOffset>0x19C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- TEMPERATURE_TIME -->
            <field>
              <name>TEMPERATURE_TIME</name>
              <description>32-bit IEEE Floating Point Value</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_PROC_X -->
        <register>
          <name>DREG_GYRO_1_PROC_X</name>
          <description>Contains the actual measured angular rate from the gyro 1 for the x axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_PROC_X -->
            <field>
              <name>GYRO_1_PROC_X</name>
              <description>Gyro X in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_PROC_Y -->
        <register>
          <name>DREG_GYRO_1_PROC_Y</name>
          <description>Contains the actual measured angular rate from the gyro 1 for the y axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1A4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_PROC_Y -->
            <field>
              <name>GYRO_1_PROC_Y</name>
              <description>Gyro Y in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_PROC_Z -->
        <register>
          <name>DREG_GYRO_1_PROC_Z</name>
          <description>Contains the actual measured angular rate from the gyro 1 for the z axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1A8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_PROC_Z -->
            <field>
              <name>GYRO_1_PROC_Z</name>
              <description>Gyro Z in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_PROC_TIME -->
        <register>
          <name>DREG_GYRO_1_PROC_TIME</name>
          <description>Contains the time at which the last rate gyro data from the gyro 1 was measured.</description>
          <addressOffset>0x1AC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_PROC_TIME -->
            <field>
              <name>GYRO_1_PROC_TIME</name>
              <description>Gyro 1 time stamp (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_PROC_X -->
        <register>
          <name>DREG_GYRO_2_PROC_X</name>
          <description>Contains the actual measured angular rate from the gyro 2 for the x axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1B0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_PROC_X -->
            <field>
              <name>GYRO_2_PROC_X</name>
              <description>Gyro X in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_PROC_Y -->
        <register>
          <name>DREG_GYRO_2_PROC_Y</name>
          <description>Contains the actual measured angular rate from the gyro 2 for the y axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1B4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_PROC_Y -->
            <field>
              <name>GYRO_2_PROC_Y</name>
              <description>Gyro Y in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_PROC_Z -->
        <register>
          <name>DREG_GYRO_2_PROC_Z</name>
          <description>Contains the actual measured angular rate from the gyro 2 for the z axis in degrees/sec after calibration has been applied.</description>
          <addressOffset>0x1B8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_PROC_Z -->
            <field>
              <name>GYRO_2_PROC_Z</name>
              <description>Gyro Z in degrees / sec (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_PROC_TIME -->
        <register>
          <name>DREG_GYRO_2_PROC_TIME</name>
          <description>Contains the time at which the last rate gyro data from the gyro 2 was measured.</description>
          <addressOffset>0x1BC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_PROC_TIME -->
            <field>
              <name>GYRO_2_PROC_TIME</name>
              <description>Gyro 2 time stamp (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>


        <!-- DREG_ACCEL_1_PROC_X -->
        <register>
          <name>DREG_ACCEL_1_PROC_X</name>
          <description>Contains the actual measured acceleration from the accelerometer 1 for the x axis in m/s2 after calibration has been applied.</description>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_PROC_X -->
            <field>
              <name>ACCEL_1_PROC_X</name>
              <description>Acceleration X in m/s2 (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_PROC_Y -->
        <register>
          <name>DREG_ACCEL_1_PROC_Y</name>
          <description>Contains the actual measured acceleration from the accelerometer 1 for the y axis in m/s2 after calibration has been applied.</description>
          <addressOffset>0x1C4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_PROC_Y -->
            <field>
              <name>ACCEL_1_PROC_Y</name>
              <description>Acceleration Y in m/s2 (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_PROC_Z -->
        <register>
          <name>DREG_ACCEL_1_PROC_Z</name>
          <description>Contains the actual measured acceleration from the accelerometer 1 for the z axis in m/s2 after calibration has been applied.</description>
          <addressOffset>0x1C8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_PROC_Z -->
            <field>
              <name>ACCEL_1_PROC_Z</name>
              <description>Acceleration Z in m/s2 (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_ACCEL_1_PROC_TIME -->
        <register>
          <name>DREG_ACCEL_1_PROC_TIME</name>
          <description>Contains the time at which the last acceleration data from the accelerometer 1 was measured.</description>
          <addressOffset>0x1CC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ACCEL_1_PROC_TIME -->
            <field>
              <name>ACCEL_1_PROC_TIME</name>
              <description>Accelerometer 1 time stamp (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>


        <!-- DREG_MAG_1_PROC_X -->
        <register>
          <name>DREG_MAG_1_PROC_X</name>
          <description>Contains the actual measured magnetic field from the magnetometer 1 for the x axis in mT after calibration has been applied.</description>
          <addressOffset>0x1D0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_PROC_X -->
            <field>
              <name>MAG_1_PROC_X</name>
              <description>Magnetometer X in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_PROC_Y -->
        <register>
          <name>DREG_MAG_1_PROC_Y</name>
          <description>Contains the actual measured magnetic field from the magnetometer 1 for the y axis in mT after calibration has been applied.</description>
          <addressOffset>0x1D4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_PROC_Y -->
            <field>
              <name>MAG_1_PROC_Y</name>
              <description>Magnetometer Y in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_PROC_Z -->
        <register>
          <name>DREG_MAG_1_PROC_Z</name>
          <description>Contains the actual measured magnetic field from the magnetometer 1 for the z axis in mT after calibration has been applied.</description>
          <addressOffset>0x1D8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_PROC_Z -->
            <field>
              <name>MAG_1_PROC_Z</name>
              <description>Magnetometer Z in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_NORM -->
        <register>
          <name>DREG_MAG_1_NORM</name>
          <description>Contains the L2-norm (magnetic norm) for the measured magnetic field from the magnetometer 1 computed over the calibrated values.</description>
          <addressOffset>0x1DC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_NORM -->
            <field>
              <name>MAG_1_NORM</name>
              <description>Magnetic norm (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_1_PROC_TIME -->
        <register>
          <name>DREG_MAG_1_PROC_TIME</name>
          <description>Contains the time stamp at which the calibrated magnetometer 1 data was acquired.</description>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_1_PROC_TIME -->
            <field>
              <name>MAG_1_PROC_TIME</name>
              <description>Magnetometer 1 time stamp (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>


        <!-- DREG_MAG_2_PROC_X -->
        <register>
          <name>DREG_MAG_2_PROC_X</name>
          <description>Contains the actual measured magnetic field from the magnetometer 2 for the x axis in mT after calibration has been applied.</description>
          <addressOffset>0x1E4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_PROC_X -->
            <field>
              <name>MAG_2_PROC_X</name>
              <description>Magnetometer X in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_PROC_Y -->
        <register>
          <name>DREG_MAG_2_PROC_Y</name>
          <description>Contains the actual measured magnetic field from the magnetometer 2 for the y axis in mT after calibration has been applied.</description>
          <addressOffset>0x1E8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_PROC_Y -->
            <field>
              <name>MAG_2_PROC_Y</name>
              <description>Magnetometer Y in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_PROC_Z -->
        <register>
          <name>DREG_MAG_2_PROC_Z</name>
          <description>Contains the actual measured magnetic field from the magnetometer 2 for the z axis in mT after calibration has been applied.</description>
          <addressOffset>0x1EC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_PROC_Z -->
            <field>
              <name>MAG_2_PROC_Z</name>
              <description>Magnetometer Z in mT (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_NORM -->
        <register>
          <name>DREG_MAG_2_NORM</name>
          <description>Contains the L2-norm (magnetic norm) for the measured magnetic field from the magnetometer 2 computed over the calibrated values.</description>
          <addressOffset>0x1F0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_NORM -->
            <field>
              <name>MAG_2_NORM</name>
              <description>Magnetic norm (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_MAG_2_PROC_TIME -->
        <register>
          <name>DREG_MAG_2_PROC_TIME</name>
          <description>Contains the time stamp at which the calibrated magnetometer 2 data was acquired.</description>
          <addressOffset>0x1F4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- MAG_2_PROC_TIME -->
            <field>
              <name>MAG_2_PROC_TIME</name>
              <description>Magnetometer 2 time stamp (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_QUAT_AB -->
        <register>
          <name>DREG_QUAT_AB</name>
          <description>Contains the first two components (a and b) of the estimated quaternion attitude.</description>
          <addressOffset>0x1F8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- QUAT_A -->
            <field>
              <name>QUAT_A</name>
              <description>First quaternion component. Stored as a 16-bit signed integer. To get the actual value, divide by 29789.09091.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- QUAT_B -->
            <field>
              <name>QUAT_B</name>
              <description>Second quaternion component. Stored as a 16-bit signed integer. To get the actual value, divide by 29789.09091.</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_QUAT_CD -->
        <register>
          <name>DREG_QUAT_CD</name>
          <description>Contains the second two components (c and d) of the estimated quaternion attitude.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- QUAT_C -->
            <field>
              <name>QUAT_C</name>
              <description>Third quaternion component. Stored as a 16-bit signed integer. To get the actual value, divide by 29789.09091.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- QUAT_D -->
            <field>
              <name>QUAT_D</name>
              <description>Fourth quaternion component. Stored as a 16-bit signed integer. To get the actual value, divide by 29789.09091.</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_QUAT_TIME -->
        <register>
          <name>DREG_QUAT_TIME</name>
          <description>Contains the time that the quaternion attitude was estimated.</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- QUAT_TIME -->
            <field>
              <name>QUAT_TIME</name>
              <description>Quaternion time (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_EULER_PHI_THETA -->
        <register>
          <name>DREG_EULER_PHI_THETA</name>
          <description>Contains the pitch and roll angle estimates.</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PHI -->
            <field>
              <name>PHI</name>
              <description>Roll angle. Stored as a 16-bit signed integer. To get the actual value, divide by 91.02222.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- THETA -->
            <field>
              <name>THETA</name>
              <description>Pitch angle. Stored as a 16-bit signed integer. To get the actual value, divide by 91.02222.</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_EULER_PSI -->
        <register>
          <name>DREG_EULER_PSI</name>
          <description>Contains the yaw angle estimate.</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PSI -->
            <field>
              <name>PSI</name>
              <description>Yaw angle. Stored as a 16-bit signed integer. To get the actual value, divide by 91.02222.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_EULER_PHI_THETA_DOT -->
        <register>
          <name>DREG_EULER_PHI_THETA_DOT</name>
          <description>Contains the pitch and roll rate estimates.</description>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PHI_DOT -->
            <field>
              <name>PHI_DOT</name>
              <description>Roll rate. Stored as a 16-bit signed integer. To get the actual value, divide by 16.0.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>

            <!-- THETA_DOT -->
            <field>
              <name>THETA_DOT</name>
              <description>Pitch rate. Stored as a 16-bit signed integer. To get the actual value, divide by 16.0.</description>
              <bitRange>[15:0]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_EULER_PSI_DOT -->
        <register>
          <name>DREG_EULER_PSI_DOT</name>
          <description>Contains the yaw rate estimate.</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PSI_DOT -->
            <field>
              <name>PSI_DOT</name>
              <description>Yaw rate. Stored as a 16-bit signed integer. To get the actual value, divide by 16.0.</description>
              <bitRange>[31:16]</bitRange>
              <dataType>int16_t</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_EULER_TIME -->
        <register>
          <name>DREG_EULER_TIME</name>
          <description>Contains the time that the Euler Angles were estimated.</description>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- EULER_TIME -->
            <field>
              <name>EULER_TIME</name>
              <description>Euler time (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_POSITION_NORTH -->
        <register>
          <name>DREG_POSITION_NORTH</name>
          <description>Contains the measured north position in meters from the latitude specified in CREG_HOME_NORTH.</description>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- POSITION_NORTH -->
            <field>
              <name>POSITION_NORTH</name>
              <description>North Position (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_POSITION_EAST -->
        <register>
          <name>DREG_POSITION_EAST</name>
          <description>Contains the measured east position in meters from the longitude specified in CREG_HOME_EAST.</description>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- POSITION_EAST -->
            <field>
              <name>POSITION_EAST</name>
              <description>East Position (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_POSITION_UP -->
        <register>
          <name>DREG_POSITION_UP</name>
          <description>Contains the measured altitude in meters from the altitude specified in CREG_HOME_UP.</description>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- POSITION_UP -->
            <field>
              <name>POSITION_UP</name>
              <description>Altitude (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_POSITION_TIME -->
        <register>
          <name>DREG_POSITION_TIME</name>
          <description>Contains the time at which the position was acquired.</description>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- POSITION_TIME -->
            <field>
              <name>POSITION_TIME</name>
              <description>Position Time (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_VELOCITY_NORTH -->
        <register>
          <name>DREG_VELOCITY_NORTH</name>
          <description>Contains the measured north velocity in m/s.</description>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- VELOCITY_NORTH -->
            <field>
              <name>VELOCITY_NORTH</name>
              <description>North Velocity (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_VELOCITY_EAST -->
        <register>
          <name>DREG_VELOCITY_EAST</name>
          <description>Contains the measured east velocity in m/s.</description>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- VELOCITY_EAST -->
            <field>
              <name>VELOCITY_EAST</name>
              <description>East Velocity (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_VELOCITY_UP -->
        <register>
          <name>DREG_VELOCITY_UP</name>
          <description>Contains the measured altitude velocity in m/s.</description>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- VELOCITY_UP -->
            <field>
              <name>VELOCITY_UP</name>
              <description>Altitude Velocity (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_VELOCITY_TIME -->
        <register>
          <name>DREG_VELOCITY_TIME</name>
          <description>Contains the time at which the velocity was measured.</description>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- VELOCITY_TIME -->
            <field>
              <name>VELOCITY_TIME</name>
              <description>Velocity time (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <dataType>float</dataType>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_BIAS_X -->
        <register>
          <name>DREG_GYRO_1_BIAS_X</name>
          <description>Contains the estimated x-axis bias for the gyro 1 in degrees/s.</description>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_BIAS_X -->
            <field>
              <name>GYRO_1_BIAS_X</name>
              <description>Gyro 1 bias X (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_BIAS_Y -->
        <register>
          <name>DREG_GYRO_1_BIAS_Y</name>
          <description>Contains the estimated y-axis bias for the gyro 1 in degrees/s.</description>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_BIAS_Y -->
            <field>
              <name>GYRO_1_BIAS_Y</name>
              <description>Gyro 1 bias Y (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_1_BIAS_Z -->
        <register>
          <name>DREG_GYRO_1_BIAS_Z</name>
          <description>Contains the estimated z-axis bias for the gyro 1 in degrees/s.</description>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_1_BIAS_Z -->
            <field>
              <name>GYRO_1_BIAS_Z</name>
              <description>Gyro 1 bias Z (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_BIAS_X -->
        <register>
          <name>DREG_GYRO_2_BIAS_X</name>
          <description>Contains the estimated x-axis bias for the gyro 2 in degrees/s.</description>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_BIAS_X -->
            <field>
              <name>GYRO_2_BIAS_X</name>
              <description>Gyro 2 bias X (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_BIAS_Y -->
        <register>
          <name>DREG_GYRO_2_BIAS_Y</name>
          <description>Contains the estimated y-axis bias for the gyro 2 in degrees/s.</description>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_BIAS_Y -->
            <field>
              <name>GYRO_2_BIAS_Y</name>
              <description>Gyro 2 bias Y (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DREG_GYRO_2_BIAS_Z -->
        <register>
          <name>DREG_GYRO_2_BIAS_Z</name>
          <description>Contains the estimated z-axis bias for the gyro 2 in degrees/s.</description>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- GYRO_2_BIAS_Z -->
            <field>
              <name>GYRO_2_BIAS_Z</name>
              <description>Gyro 2 bias Z (32-bit IEEE Floating Point Value)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>


        <!-- GET_FW_BUILD_ID -->
        <register>
          <name>GET_FW_BUILD_ID</name>
          <description>Firmware build identification string: a four byte ASCII character sequence which corresponds to a firmware series.</description>
          <addressOffset>0x2A8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- FW_BUILD_ID -->
            <field>
              <name>FW_BUILD_ID</name>
              <description>Firmware Build ID string</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- GET_FW_BUILD_VERSION -->
        <register>
          <name>GET_FW_BUILD_VERSION</name>
          <description>Firmware build version provides the unique identifier of the firmware programmed in the board. A response is four bytes long and identifies major and minor build version, and the build number.</description>
          <addressOffset>0x2AC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- VERSION_MAJOR -->
            <field>
              <name>VERSION_MAJOR</name>
              <description>8-bit unsigned integer major version number</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>

            <!-- VERSION_MINOR -->
            <field>
              <name>VERSION_MINOR</name>
              <description>8-bit unsigned integer minor version number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>

            <!-- BUILD_ID -->
            <field>
              <name>BUILD_ID</name>
              <description>16-bit unsigned integer build ID number</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- FLASH_COMMIT -->
        <register>
          <name>FLASH_COMMIT</name>
          <description>Causes the board to write all configuration settings to FLASH so that are stored in the non-volatile memory and remain when the power is cycled.</description>
          <addressOffset>0x2B0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- FLASH_COMMIT_BIT -->
            <field>
              <name>FLASH_COMMIT_BIT</name>
              <description>Flash commit bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- RESET_TO_FACTORY -->
        <register>
          <name>RESET_TO_FACTORY</name>
          <description>Causes the board to load default factory settings.</description>
          <addressOffset>0x2B4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- RESET_TO_FACTORY_BIT -->
            <field>
              <name>RESET_TO_FACTORY_BIT</name>
              <description>Reset to factory bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ZERO_GYROS -->
        <register>
          <name>ZERO_GYROS</name>
          <description>Causes the board to measure the gyro outputs and set the output trim registers to compensate for any non-zero bias. The board should be kept stationary while the zero operation is underway.</description>
          <addressOffset>0x2B8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ZERO_GYROS_BIT -->
            <field>
              <name>ZERO_GYROS_BIT</name>
              <description>Zero gyros bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- SET_HOME_POSITION -->
        <register>
          <name>SET_HOME_POSITION</name>
          <description>Sets the current GPS latitude, longitude, and altitude as the home position. All future positions will be referenced to the current GPS position.</description>
          <addressOffset>0x2C0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- SET_HOME_POSITION_BIT -->
            <field>
              <name>SET_HOME_POSITION_BIT</name>
              <description>Set home position bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- SET_MAG_REFERENCE -->
        <register>
          <name>SET_MAG_REFERENCE</name>
          <description>Sets the current yaw heading position as north.</description>
          <addressOffset>0x2C4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- SET_MAG_REFERENCE_BIT -->
            <field>
              <name>SET_MAG_REFERENCE_BIT</name>
              <description>Set magnetometer reference bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- CALIBRATE_ACCELEROMETERS -->
        <register>
          <name>CALIBRATE_ACCELEROMETERS</name>
          <description>Reboots the board and performs a crude calibration on the accelerometers. Best performed on a flat surface.</description>
          <addressOffset>0x2C8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- CALIBRATE_ACCELEROMETERS_BIT -->
            <field>
              <name>CALIBRATE_ACCELEROMETERS_BIT</name>
              <description>Calibrate accelerometers bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- RESET_FUSION -->
        <register>
          <name>RESET_FUSION</name>
          <description>Resets the sensor fusion algorithm.</description>
          <addressOffset>0x2CC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- RESET_FUSION_BIT -->
            <field>
              <name>RESET_FUSION_BIT</name>
              <description>Reset fusion bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_ZUPT -->
        <register>
          <name>ENABLE_ZUPT</name>
          <description>Enable zero velocity update.</description>
          <addressOffset>0x2D0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_ZUPT_BIT -->
            <field>
              <name>ENABLE_ZUPT_BIT</name>
              <description>Enable zero velocity update bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- EULER_MODE -->
        <register>
          <name>EULER_MODE</name>
          <description>Enable as fusion output Euler angles only.</description>
          <addressOffset>0x2D4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- EULER_MODE_BIT -->
            <field>
              <name>EULER_MODE_BIT</name>
              <description>Fusion Euler mode bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- QUATERNION_MODE -->
        <register>
          <name>QUATERNION_MODE</name>
          <description>Enable as fusion output orientation quaternion only.</description>
          <addressOffset>0x2D8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- QUATERNION_MODE_BIT -->
            <field>
              <name>QUATERNION_MODE_BIT</name>
              <description>Fusion quaternion mode bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_RT_CALIBRATION -->
        <register>
          <name>ENABLE_RT_CALIBRATION</name>
          <description>Starts RT calibration of the board.</description>
          <addressOffset>0x2DC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_RT_CALIBRATION_BIT -->
            <field>
              <name>ENABLE_RT_CALIBRATION_BIT</name>
              <description>RT calibration bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- EN_MAG_ANOMALY_DETECTION -->
        <register>
          <name>EN_MAG_ANOMALY_DETECTION</name>
          <description>Enables algorithm for anomaly detection.</description>
          <addressOffset>0x2E0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- EN_MAG_ANOMALY_DETECTION_BIT -->
            <field>
              <name>EN_MAG_ANOMALY_DETECTION_BIT</name>
              <description>Magnetic field anomaly detection bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- RUN_SELF_TESTS -->
        <register>
          <name>RUN_SELF_TESTS</name>
          <description>Starts built-in self tests.</description>
          <addressOffset>0x2E4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- RUN_SELF_TESTS_BIT -->
            <field>
              <name>RUN_SELF_TESTS_BIT</name>
              <description>Run self tests bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_EXTERNAL_EVENT -->
        <register>
          <name>ENABLE_EXTERNAL_EVENT</name>
          <description>TODO: add description</description>
          <addressOffset>0x2E8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_EXTERNAL_EVENT_BIT -->
            <field>
              <name>ENABLE_EXTERNAL_EVENT_BIT</name>
              <description>Enable external event bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_GNNS_FUSION -->
        <register>
          <name>ENABLE_GNNS_FUSION</name>
          <description>TODO: add description</description>
          <addressOffset>0x2EC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_GNNS_FUSION_BIT -->
            <field>
              <name>ENABLE_GNNS_FUSION_BIT</name>
              <description>Enable GNSS fusion bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_USR_EULER_OUTPUT -->
        <register>
          <name>ENABLE_USR_EULER_OUTPUT</name>
          <description>TODO: add description</description>
          <addressOffset>0x2F0</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_USR_EULER_OUTPUT_BIT -->
            <field>
              <name>ENABLE_USR_EULER_OUTPUT_BIT</name>
              <description>Enable user Euler output bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_DEAD_RECKONING -->
        <register>
          <name>ENABLE_DEAD_RECKONING</name>
          <description>TODO: add description</description>
          <addressOffset>0x2F4</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_DEAD_RECKONING_BIT -->
            <field>
              <name>ENABLE_DEAD_RECKONING_BIT</name>
              <description>Enable dead reckoning bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_HEAVE_SWAY_SURGE -->
        <register>
          <name>ENABLE_HEAVE_SWAY_SURGE</name>
          <description>TODO: add description</description>
          <addressOffset>0x2F8</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_HEAVE_SWAY_SURGE_BIT -->
            <field>
              <name>ENABLE_HEAVE_SWAY_SURGE_BIT</name>
              <description>Enable heave sway surge bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- ENABLE_UKF -->
        <register>
          <name>ENABLE_UKF</name>
          <description>TODO: add description</description>
          <addressOffset>0x2FC</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- ENABLE_UKF_BIT -->
            <field>
              <name>ENABLE_UKF_BIT</name>
              <description>Enable UKF bit</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- BOARD_UNIQUE_ID_1 -->
        <register>
          <name>BOARD_UNIQUE_ID_1</name>
          <description>First 32-bits of the 64-bits of the board unique identifier. Bits of the unique identifier cannot be modified by the user.</description>
          <addressOffset>0x3F4</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- BOARD_UNIQUE_ID_1 -->
            <field>
              <name>BOARD_UNIQUE_ID_1_BTIS</name>
              <description>Board unique ID bits</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- BOARD_UNIQUE_ID_2 -->
        <register>
          <name>BOARD_UNIQUE_ID_2</name>
          <description>Last 32-bits of the 64-bits of the board unique identifier. Bits of the unique identifier cannot be modified by the user.</description>
          <addressOffset>0x3F8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- BOARD_UNIQUE_ID_2 -->
            <field>
              <name>BOARD_UNIQUE_ID_2_BTIS</name>
              <description>Board unique ID bits</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- PROTOCOL_VERSION -->
        <register>
          <name>PROTOCOL_VERSION</name>
          <description>String version of the protocol.</description>
          <addressOffset>0x3FC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>

          <fields>
            <!-- PROTOCOL_VERSION_STR -->
            <field>
              <name>PROTOCOL_VERSION_STR</name>
              <description>Protocol version string</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

      </registers>
    </peripheral>
  </peripherals>
</device>
